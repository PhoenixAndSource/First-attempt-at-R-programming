# A common way to generate factors, especially for tables, is the cut() function.
# You give it a data vector x and a set of bins defined by a vector b.
# The function then determines which bin each of the elements of x falls into.
# The following is the form of the call we'll use here:

y <- cut(x,b,labels=FALSE)

# where the bins are defined to be the semi-open intervals (b[1],b[2]],
# (b[2],b[3]},.... Here's an example:

> z
[1] 0.88114802 0.28532689 0.58647376 0.42851862 0.46881514 0.24226859 0.05289197
[8] 0.88035617
> seq(from=0.0,to=1.0,by=0.1)
  [1] 0.0 0.1 0.2 0.3 0.4 0.5 0.6 0.7 0.8 0.9 1.0
> binmarks <- seq(from=0.0,to=1.0,by=0.1)
> cut(z,binmarks,labels=F)
[1] 9 3 6 5 5 3 1 9

# This says that z[1], 0.88114802, 
# fell into bin 9, which was (0.8,0.9];z[2],0.28532689, 
# fell into bin 3; and so on.

# This returns a vector, as seen in the example's result.
# But we can convert it into a factor and possibly then use it to build a table.
# For instance, you can imagine using this to write your own specialized histogram function.
# (The R functioin findInterval() would be useful for this, too.)

# R includes a number of other functions that are handy for working with tables and factors.
# We'll discuss two of them here: aggregate() and cut().

# Note: Hadley Wickham's reshape package 
# "lets you flexibly restructure and aggregate data using just two functions: melt and cast."
# This package may take a while to learn, but it is extremely powerful.
# His plyr package is also quite versatile.
# You can download both packages from R's CRAN repository.
# See Appendix B for more details about downloading and installing packages.

# 6.4.1 The aggregate() Function

# The aggregate() function calls tapply() once for each variable in a group.
# For example, in the abalone data, we could find the median of each variable,
# broken down by gender, as follows:

> aggregate(aba[,-1],list(aba$Gender),median)
  Group.1 Length Diameter Height WholeWt ShuckedWt  ViscWt  ShellWt  Rings
  1       F 0.590    0.465  0.160  1.03850  0.44050  0.2240   0.295    10
  2       I 0.435    0.335  0.110  0.38400  0.16975  0.0805   0.113    8
  3       M 0.580    0.455  0.155  0.97575  0.42175  0.2100   0.276    10

# The first argument, aba[,1] is the entire data frame except for the first column, which is Gender itself. 
# The second argument, which must be a list, is our Gender factor as before. 
# Finally, the third argument tells R to compute 
# the median on each column in each of the data frames generated by the subgrouping corresponding to our factors. 
# There are three such subgroups in our example here and thus three rows in the output of aggregate().
